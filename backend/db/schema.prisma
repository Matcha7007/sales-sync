generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/@generated/db"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model mst_user {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique @db.Uuid
  username    String    @unique @db.VarChar(50)
  password    String    @db.VarChar(250)
  employee_id Int?
  role        Json?
  role_id     Int?
  is_active   Boolean   @default(true) @db.Boolean
  created_on  DateTime? @default(now())
  modified_on DateTime? @default(now())
  created_by  Int?
  modified_by Int?
}

model mst_role {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique @db.Uuid
  role_name   String    @db.VarChar(100)
  created_on  DateTime? @default(now())
  modified_on DateTime? @default(now())
  created_by  Int?
  modified_by Int?
  description String    @db.VarChar(250)
  is_active   Boolean   @default(true) @db.Boolean
}

model mst_department {
  id              Int            @id @default(autoincrement())
  uuid            String         @unique @db.Uuid
  department_name String         @db.VarChar(100)
  created_on      DateTime?      @default(now())
  modified_on     DateTime?      @default(now())
  created_by      Int?
  modified_by     Int?
  is_active       Boolean        @default(true) @db.Boolean
  mst_employee    mst_employee[]
  mst_section     mst_section[]
}

model log_activity {
  id            Int       @id @default(autoincrement())
  uuid          String    @db.Uuid
  ref_id        String?   @db.Uuid
  user_id       Int?
  username      String?   @db.VarChar(50)
  ref_table     String    @db.VarChar(100)
  data_before   Json?     @db.Json
  data_after    Json?     @db.Json
  action_method String    @db.VarChar(100)
  module_name   String    @db.VarChar(100)
  description   String
  created_on    DateTime? @default(now())
}

model mst_employee {
  id             Int             @id @default(autoincrement())
  uuid           String          @unique @db.Uuid
  name           String          @db.VarChar(100)
  address        String          @db.VarChar(250)
  phone          String          @db.VarChar(15)
  department_id  Int?
  section_id     Int?
  created_on     DateTime?       @default(now())
  modified_on    DateTime?       @default(now())
  created_by     Int?
  modified_by    Int?
  is_active      Boolean         @default(true) @db.Boolean
  department     String?         @db.VarChar(255)
  section        String?         @db.VarChar(255)
  mst_department mst_department? @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mst_section    mst_section?    @relation(fields: [section_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model mst_customer {
  id          Int       @id @default(autoincrement())
  uuid        String    @unique @db.Uuid
  name        String    @db.VarChar(100)
  address     String    @db.VarChar(250)
  phone       String    @db.VarChar(15)
  created_on  DateTime? @default(now())
  modified_on DateTime? @default(now())
  created_by  Int?
  modified_by Int?
  is_active   Boolean   @default(true) @db.Boolean
  tr_sale     tr_sale[]
}

model mst_supplier {
  id          Int           @id @default(autoincrement())
  uuid        String        @unique @db.Uuid
  name        String        @db.VarChar(100)
  address     String        @db.VarChar(250)
  phone       String        @db.VarChar(15)
  created_on  DateTime?     @default(now())
  modified_on DateTime?     @default(now())
  created_by  Int?
  modified_by Int?
  is_active   Boolean       @default(true) @db.Boolean
  tr_purchase tr_purchase[]
}

model mst_section {
  id             Int            @id @default(autoincrement())
  uuid           String         @unique @db.Uuid
  department_id  Int
  created_on     DateTime?      @default(now())
  modified_on    DateTime?      @default(now())
  created_by     Int?
  modified_by    Int?
  section_name   String         @db.VarChar(100)
  is_active      Boolean        @default(true) @db.Boolean
  mst_employee   mst_employee[]
  mst_department mst_department @relation(fields: [department_id], references: [id])
}

model mst_uom {
  id          Int        @id @default(autoincrement())
  uuid        String     @unique @db.Uuid
  name        String     @db.VarChar(100)
  description String     @db.VarChar(250)
  created_on  DateTime?  @default(now())
  modified_on DateTime?  @default(now())
  created_by  Int?
  modified_by Int?
  is_active   Boolean    @default(true) @db.Boolean
  mst_item    mst_item[]
}

model mst_item {
  id             Int           @id @default(autoincrement())
  uuid           String        @unique @db.Uuid
  name           String        @db.VarChar(100)
  description    String        @db.VarChar(250)
  uom_id         Int?
  category_id    Int?
  base_price     Decimal?      @db.Money
  stock_quantity BigInt?       @default(0) @db.BigInt
  created_on     DateTime?     @default(now())
  modified_on    DateTime?     @default(now())
  created_by     Int?
  modified_by    Int?
  is_active      Boolean       @default(true) @db.Boolean
  mst_uom        mst_uom?      @relation(fields: [uom_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mst_category   mst_category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tr_invetory    tr_invetory[]
  tr_sale        tr_sale[]
  tr_purchase    tr_purchase[]
}

model mst_category {
  id          Int           @id @default(autoincrement())
  uuid        String        @unique @db.Uuid
  name        String        @db.VarChar(100)
  code        String        @db.VarChar(1)
  description String        @db.VarChar(250)
  created_on  DateTime?     @default(now())
  modified_on DateTime?     @default(now())
  created_by  Int?
  modified_by Int?
  is_active   Boolean       @default(true) @db.Boolean
  mst_item    mst_item[]
  tr_invetory tr_invetory[]
  tr_sale     tr_sale[]
  tr_purchase tr_purchase[]
}

model tr_invetory {
  // id           Int           @id @default(autoincrement())
  id           String        @id @default(uuid()) @db.Uuid
  item_id      String        @db.Uuid
  category_id  String        @db.Uuid
  quantity     BigInt?       @default(0) @db.BigInt
  description  String        @db.VarChar(250)
  date         DateTime?     @default(now())
  created_on   DateTime?     @default(now())
  modified_on  DateTime?     @default(now())
  created_by   Int?
  modified_by  Int?
  is_active    Boolean       @default(true) @db.Boolean
  mst_item     mst_item?     @relation(fields: [item_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  mst_category mst_category? @relation(fields: [category_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
}

model tr_sale {
  id             String           @id @default(uuid()) @db.Uuid
  item_id        String           @db.Uuid
  category_id    String           @db.Uuid
  customer_id    String           @db.Uuid
  quantity       BigInt?          @default(0) @db.BigInt
  price_of_unit  Decimal          @db.Money
  total_amount   Decimal          @db.Money
  is_dp          Boolean          @default(false) @db.Boolean
  dp_amount      Decimal          @default(0) @db.Money
  created_on     DateTime?        @default(now())
  modified_on    DateTime?        @default(now())
  created_by     Int?
  modified_by    Int?
  is_active      Boolean          @default(true) @db.Boolean
  mst_item       mst_item?        @relation(fields: [item_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  mst_category   mst_category?    @relation(fields: [category_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  mst_customer   mst_customer?    @relation(fields: [customer_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  tr_sale_detail tr_sale_detail[]
}

model tr_sale_detail {
  id                 String    @id @default(uuid()) @db.Uuid
  sale_no            String    @db.VarChar(20)
  sequence           Int?      @default(1) @db.Integer
  sale_id            String    @db.Uuid
  outstanding_amount Decimal   @db.Money
  description        String    @db.VarChar(250)
  date               DateTime? @default(now())
  created_on         DateTime? @default(now())
  modified_on        DateTime? @default(now())
  created_by         Int?
  modified_by        Int?
  is_active          Boolean   @default(true) @db.Boolean
  tr_sale            tr_sale?  @relation(fields: [sale_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tr_purchase {
  id                 String               @id @default(uuid()) @db.Uuid
  item_id            String               @db.Uuid
  category_id        String               @db.Uuid
  supplier_id        String               @db.Uuid
  quantity           BigInt?              @default(0) @db.BigInt
  price_of_unit      Decimal              @db.Money
  total_amount       Decimal              @db.Money
  is_dp              Boolean              @default(false) @db.Boolean
  dp_amount          Decimal              @default(0) @db.Money
  created_on         DateTime?            @default(now())
  modified_on        DateTime?            @default(now())
  created_by         Int?
  modified_by        Int?
  is_active          Boolean              @default(true) @db.Boolean
  mst_item           mst_item?            @relation(fields: [item_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  mst_category       mst_category?        @relation(fields: [category_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  mst_supplier       mst_supplier?        @relation(fields: [supplier_id], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  tr_purchase_detail tr_purchase_detail[]
}

model tr_purchase_detail {
  id                 String       @id @default(uuid()) @db.Uuid
  purchase_no        String       @db.VarChar(20)
  sequence           Int?         @default(1) @db.Integer
  sale_id            String       @db.Uuid
  outstanding_amount Decimal      @db.Money
  description        String       @db.VarChar(250)
  date               DateTime?    @default(now())
  created_on         DateTime?    @default(now())
  modified_on        DateTime?    @default(now())
  created_by         Int?
  modified_by        Int?
  is_active          Boolean      @default(true) @db.Boolean
  tr_purchase        tr_purchase? @relation(fields: [sale_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
